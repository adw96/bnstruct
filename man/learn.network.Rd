% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/learn-methods.R
\docType{methods}
\name{learn.network}
\alias{learn.network}
\alias{learn.network,BN}
\alias{learn.network,BN-method}
\alias{learn.network,BNDataset}
\alias{learn.network,BNDataset-method}
\title{learn a network (structure and parameters) of a \link{BN} from a \link{BNDataset}.}
\usage{
learn.network(x, ...)

\S4method{learn.network}{BN}(x, dataset = NULL, algo = "mmhc",
  scoring.func = "BDeu", alpha = 0.05, ess = 1, bootstrap = FALSE,
  layering = c(), max.fanin.layers = NULL,
  max.fanin = num.variables(dataset), layer.struct = NULL,
  cont.nodes = c(), use.imputed.data = FALSE, use.cpc = TRUE, ...)

\S4method{learn.network}{BNDataset}(x, algo = "mmhc", scoring.func = "BDeu",
  alpha = 0.05, ess = 1, bootstrap = FALSE, layering = c(),
  max.fanin.layers = NULL, max.fanin = num.variables(dataset),
  layer.struct = NULL, cont.nodes = c(), use.imputed.data = FALSE,
  use.cpc = TRUE, ...)
}
\arguments{
\item{x,}{dataset a \code{\link{BN}} object.}

\item{algo}{the algorithm to use. Currently, one among \code{sm} (Silander-Myllymaki), \code{mmhc}
(Max-Min Hill Climbing, default) and \code{sem} (Structural Expectation Maximization).}

\item{scoring.func}{the scoring function to use. Currently, one among \code{BDeu}
(only for \code{algo == mmhc} or \code{sm}), \code{AIC}, \code{BIC}.}

\item{alpha}{confidence threshold (only for \code{mmhc}).}

\item{ess}{Equivalent Sample Size value.}

\item{bootstrap}{\code{TRUE} to use bootstrap samples.}

\item{layering}{vector containing the layers each node belongs to (only for \code{sm}).}

\item{max.fanin.layers}{matrix of available parents in each layer (only for \code{sm}).}

\item{max.fanin}{maximum number of parents for each node (only for \code{sm}).}

\item{layer.struct}{prior knowledge for layering structure (only for \code{mmhc}).}

\item{cont.nodes}{vector containing the index of continuous variables.}

\item{use.imputed.data}{\code{TRUE} to learn the structure from the imputed dataset
(if available, a check is performed). Default is to use raw dataset}

\item{use.cpc}{(when using \code{mmhc}) compute Candidate Parent-and-Children sets instead of
starting the Hill Climbing from an empty graph.}
}
\value{
new \code{\link{BN}} object with structure (DAG) and conditional probabilities
as learnt from the given dataset.
}
\description{
Learn the structure (the directed acyclic graph) of a \code{\link{BN}} object according to a \code{\link{BNDataset}}.
Currently, two algorithms are supported (can be specified using the \code{algo} option): \code{'sm'}, the Silander-Myllymaki exact algorithm,
and \code{'mmhc'}, the Max-Min Hill-Climbing heuristic algorithm (default).
Three scoring functions are also provided: \code{'BDeu'}, the Bayesian-Dirichlet equivalent uniform score, \code{'AIC'},
the Akaike Information criterion, and \code{'BIC'}, the Bayesian Information criterion.
}
\details{
The Silander-Myllymaki algorithm can take a very long time, and it is not feasible for networks of more than 20-30 nodes.
It is strongly recommended that valid \code{layering}, \code{max.fanin.layers} and \code{max.fanin} parameters are passed
to the method if \code{algo = 'sm'} is given as parameter to the method.

Then, the parameters of the network are learnt using MAP (Maximum A Posteriori) estimation.
}

